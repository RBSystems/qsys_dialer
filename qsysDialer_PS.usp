#CATEGORY "46" "Q-SYS" // Custom
/*
Dealer Name: CoitCom
Programmer: palmer_sanderson
Comments: 
*/
  
//COMPILER DIRECTIVES
#symbol_name "Q-SYS Dialer"
//#hint ""
#print_to_trace
#enable_trace
#default_volatile


#help_begin
    V.01
    
    -TX/RX are for communication.
  
    -The named control strings are automatically set to defualt unless changed
    
    -voip and pots are not functional yet, voip is automatically selected
    
    -call progress/status fb return from Q-SYS
    
    -standard dialer controls are as shown
    
#help_end


//INCLUDE LIBRARIES
// #USER_SIMPLSHARP_LIBRARY "<clz name>"

//IO Assignments
string_input 
    _skip_,
    DSP_RX[128],
     _skip_,
    dial_string_named_control_CUSTOM[128], 
    call_status_named_control_CUSTOM[128],
    keypad_prefix_custom[128],
    connect_named_control_CUSTOM[128],
    disconnect_named_control_CUSTOM[128],
    _skip_;

string_output 
    DSP_TX, 
    _skip_, 
    call_status_fb, 
    call_progress_fb;

digital_input 
    program_start, 
    redial, 
    disconnect, 
    connect, 
    _skip_, 
    backspace, 
    dialerClear, 
    _skip_;

digital_input one, two, three, four, five, six, seven, eight, nine, zero, star, pound;

string_output number_dialed;

// digital_output call_hold_fb,connected_fb,disconnected_fb,ringing_fb;




//Variables

string dial_string_named_control[128];
string call_status_named_control[128];
string number_dialed_for_redial[128];
string keypad_prefix[128];
string parse_temp[128],cv_add_temp[128];

string connect_named_control[128], disconnect_named_control[128];

string dial_string_CV[128],call_status_CV[128];

string key[10];
integer p1,p2,p3,x;

//Events

//gets number dialed for feedback
function request_dialed_number()
{
    delay(50);
    makestring(DSP_TX,"cg %s\x0D\x0A",dial_string_named_control);
}

//sends keypad presses 
function keypadPress(string key)
{                           
    makestring(DSP_TX, "ct %s%s\x0D\x0A",keypad_prefix,key);
    request_dialed_number();
}
// set change group
function setChangeGroup()
{
    makestring(DSP_TX, "cgc 2");
    delay(50);
    makestring(DSP_TX, "cgsna 2 100");
    delay(50);
    makestring(DSP_TX, "cga 2 %s", call_status_named_control);
    makestring(DSP_TX, "cga 2 %s", dial_string_named_control);
    
}

//adds (cv ") to the front of the strings
string_function addCv(string string_to_add_cv)
{
    makestring(cv_add_temp,"cv \x22%s",string_to_add_cv);
    return(cv_add_temp);
}

//parses DSP RX
string_function getData(string cvString)
{
    p1 = find(cvString,DSP_RX, 1);
    p2 = find("\x22\x20\x22",DSP_RX, p1) + 3;
    p3 = find("\x22",DSP_RX, p2);
    parse_temp = mid(DSP_RX, p2, p3 -p2);
    
    return(parse_temp);
}


//grab numbers dialed
change DSP_RX
{
    if(find(dial_string_CV,DSP_RX))
    {
        
        number_dialed_for_redial = getData(dial_string_CV);
        number_dialed = number_dialed_for_redial;   
    }
    else if(find(call_status_CV,DSP_RX))
    {
       
        call_status_fb = getData(call_status_CV);
        
    }
}


// check for custom prefixes
change program_start
{
    if(len(dial_string_named_control_CUSTOM) > 0)
    {   
        dial_string_named_control = dial_string_named_control_CUSTOM;
    }else{
        dial_string_named_control = "SoftPhoneStatusSoftphone-1CallControlDialString";
    }
    

    if(len(call_status_named_control_CUSTOM) > 0)
    {   
        call_status_named_control = call_status_named_control_CUSTOM;
    }else{
        call_status_named_control = "SoftPhoneStatusSoftphone-1CallStatusStatus";
    }
    
    if(len(keypad_prefix_custom) > 0)
    {   
        keypad_prefix = keypad_prefix_custom;
    }else{
        keypad_prefix = "SoftPhoneStatusSoftphone-1PinPadPinPad";
    }
    
    if(len(connect_named_control_CUSTOM) > 0)
    {   
        connect_named_control = connect_named_control_CUSTOM;
    }else{
        connect_named_control = "SoftPhoneStatusSoftphone-1CallControlConnect";
    }
    
    if(len(disconnect_named_control_CUSTOM) > 0)
    {   
        disconnect_named_control = disconnect_named_control_CUSTOM;
    }else{
        disconnect_named_control = "SoftPhoneStatusSoftphone-1CallControlDisconnect";
    }
    
    setChangeGroup();
    
    dial_string_CV = addCV(dial_string_named_control);
    call_status_CV = addCV(call_status_named_control);
}

// call controls presses
push connect
{
    makestring(DSP_TX,"ct %s\x0D\x0A",connect_named_control);
    request_dialed_number();
}

push redial
{
    makestring(DSP_TX,"css %s \x22%s\x22\x0D\x0A",dial_string_named_control,number_dialed_for_redial);
    delay(50);
    makestring(DSP_TX,"ct %s\x0D\x0A",connect_named_control);
}

push disconnect
{
    makestring(DSP_TX,"ct %s\x0D\x0A",disconnect_named_control);
    // not sure if needed
    // makestring(DSP_TX,"css %sCallControlDialString \x22\x22",named_control_prefix);
}

//Keypad presses
push dialerClear 
{
    keypadPress("Clear");
}
push backspace 
{
    keypadPress("Backspace");
}
push one 
{
    keypadPress("1");
}
push two 
{
    keypadPress("2");
}
push three 
{
    keypadPress("3");
}
push four 
{
    keypadPress("4");
}
push five 
{
    keypadPress("5");
}
push six 
{
    keypadPress("6");
}
push seven
{
    keypadPress("7");
}
push eight 
{
    keypadPress("8");
}
push nine 
{
    keypadPress("9");
}
push zero 
{
    keypadPress("0");
}
push star
{
    keypadPress("*");
}
push pound
{
    keypadPress("#");
}

//Main
function main()
{
  waitforinitializationcomplete();
}

